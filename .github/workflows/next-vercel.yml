name: CI/CD – Next.js on Vercel

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

permissions:
  contents: read

env:
  NEXT_TELEMETRY_DISABLED: 1
  NODE_VERSION: 20

jobs:
  ci:
    name: Lint • Test • Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      - name: Test
        run: npm test --if-present

      - name: Build (Next.js)
        run: npm run build

  deploy:
    name: Deploy with Vercel
    runs-on: ubuntu-latest
    needs: ci

    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install deps
        run: npm ci

      # Pull env + project settings from Vercel
      - name: Vercel Pull (Preview/Prod)
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            npx vercel pull --yes --environment=preview --token ${{ secrets.VERCEL_TOKEN }}
          else
            npx vercel pull --yes --environment=production --token ${{ secrets.VERCEL_TOKEN }}
          fi

      # Build using Vercel (creates .vercel/output)
      - name: Vercel Build
        run: npx vercel build --token ${{ secrets.VERCEL_TOKEN }}

      # Deploy the prebuilt output
      - name: Vercel Deploy
        id: vercel_deploy
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            URL=$(npx vercel deploy --prebuilt --token ${{ secrets.VERCEL_TOKEN }})
            echo "url=$URL" >> $GITHUB_OUTPUT
          else
            URL=$(npx vercel deploy --prebuilt --prod --token ${{ secrets.VERCEL_TOKEN }})
            echo "url=$URL" >> $GITHUB_OUTPUT
          fi

      - name: Output deployment URL
        run: echo "Deployed to ${{ steps.vercel_deploy.outputs.url }}"
