jobs:
  deploy:
    name: Deploy with Vercel
    runs-on: ubuntu-latest
    needs: ci
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      NODE_VERSION: 20
      NEXT_TELEMETRY_DISABLED: 1

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - run: npm ci

      # Pull the RIGHT env
      - name: Vercel Pull (Preview)
        if: github.event_name == 'pull_request'
        run: npx vercel pull --yes --environment=preview --token ${{ secrets.VERCEL_TOKEN }}

      - name: Vercel Pull (Production)
        if: github.event_name == 'push'
        run: npx vercel pull --yes --environment=production --token ${{ secrets.VERCEL_TOKEN }}

      # Build for that SAME env
      - name: Vercel Build (Preview)
        if: github.event_name == 'pull_request'
        run: npx vercel build --token ${{ secrets.VERCEL_TOKEN }}

      - name: Vercel Build (Production)
        if: github.event_name == 'push'
        run: npx vercel build --token ${{ secrets.VERCEL_TOKEN }}

      # Deploy the prebuilt output
      - name: Vercel Deploy (Preview)
        if: github.event_name == 'pull_request'
        id: vercel
        run: |
          URL=$(npx vercel deploy --prebuilt --token ${{ secrets.VERCEL_TOKEN }})
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: Vercel Deploy (Production)
        if: github.event_name == 'push'
        id: vercel
        run: |
          URL=$(npx vercel deploy --prebuilt --prod --token ${{ secrets.VERCEL_TOKEN }})
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: Output deployment URL
        run: echo "Deployed to ${{ steps.vercel.outputs.url }}"
